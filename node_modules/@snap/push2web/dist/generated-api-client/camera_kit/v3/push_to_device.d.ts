import { grpc } from '@improbable-eng/grpc-web';
import _m0 from 'protobufjs/minimal';
import { Observable } from 'rxjs';
import { Lens } from './lens';
export declare const protobufPackage = "com.snap.camerakit.v3";
export interface PushLensSubscriptionRequest {
    accountId: string;
    extensionRequestContext: Uint8Array;
    heartbeat: number;
}
export interface PushLensSubscriptionResponse {
    lens: Lens | undefined;
    excludedLens: PushLensSubscriptionResponse_ExcludedLens | undefined;
    heartbeat: number;
    lenses: {
        [key: string]: Uint8Array;
    };
}
export interface PushLensSubscriptionResponse_LensesEntry {
    key: string;
    value: Uint8Array;
}
export interface PushLensSubscriptionResponse_ExcludedLens {
    lensId: number;
    code: PushLensSubscriptionResponse_ExcludedLens_Code;
}
export declare enum PushLensSubscriptionResponse_ExcludedLens_Code {
    UNSET = "UNSET",
    UNKNOWN = "UNKNOWN",
    NOT_FOUND = "NOT_FOUND",
    INCOMPATIBLE_LENS_CORE_VERSION = "INCOMPATIBLE_LENS_CORE_VERSION",
    ARCHIVED_OR_INVISIBLE = "ARCHIVED_OR_INVISIBLE",
    CONTAINS_MUSIC = "CONTAINS_MUSIC",
    UNRECOGNIZED = "UNRECOGNIZED"
}
export declare function pushLensSubscriptionResponse_ExcludedLens_CodeFromJSON(object: any): PushLensSubscriptionResponse_ExcludedLens_Code;
export declare function pushLensSubscriptionResponse_ExcludedLens_CodeToJSON(object: PushLensSubscriptionResponse_ExcludedLens_Code): string;
export declare function pushLensSubscriptionResponse_ExcludedLens_CodeToNumber(object: PushLensSubscriptionResponse_ExcludedLens_Code): number;
export interface ListenLensPushRequest {
    extensionRequestContext: Uint8Array;
    heartbeat: number;
}
export interface ListenLensPushResponse {
    excludedLens: ListenLensPushResponse_ExcludedLens | undefined;
    heartbeat: number;
    lenses: {
        [key: string]: Uint8Array;
    };
}
export interface ListenLensPushResponse_LensesEntry {
    key: string;
    value: Uint8Array;
}
export interface ListenLensPushResponse_ExcludedLens {
    lensId: number;
    code: ListenLensPushResponse_ExcludedLens_Code;
}
export declare enum ListenLensPushResponse_ExcludedLens_Code {
    UNSET = "UNSET",
    UNKNOWN = "UNKNOWN",
    NOT_FOUND = "NOT_FOUND",
    INCOMPATIBLE_LENS_CORE_VERSION = "INCOMPATIBLE_LENS_CORE_VERSION",
    ARCHIVED_OR_INVISIBLE = "ARCHIVED_OR_INVISIBLE",
    CONTAINS_MUSIC = "CONTAINS_MUSIC",
    UNRECOGNIZED = "UNRECOGNIZED"
}
export declare function listenLensPushResponse_ExcludedLens_CodeFromJSON(object: any): ListenLensPushResponse_ExcludedLens_Code;
export declare function listenLensPushResponse_ExcludedLens_CodeToJSON(object: ListenLensPushResponse_ExcludedLens_Code): string;
export declare function listenLensPushResponse_ExcludedLens_CodeToNumber(object: ListenLensPushResponse_ExcludedLens_Code): number;
export declare const PushLensSubscriptionRequest: {
    encode(message: PushLensSubscriptionRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): PushLensSubscriptionRequest;
    fromJSON(object: any): PushLensSubscriptionRequest;
    toJSON(message: PushLensSubscriptionRequest): unknown;
    fromPartial<I extends {
        accountId?: string | undefined;
        extensionRequestContext?: Uint8Array | undefined;
        heartbeat?: number | undefined;
    } & {
        accountId?: string | undefined;
        extensionRequestContext?: Uint8Array | undefined;
        heartbeat?: number | undefined;
    } & Record<Exclude<keyof I, keyof PushLensSubscriptionRequest>, never>>(object: I): PushLensSubscriptionRequest;
};
export declare const PushLensSubscriptionResponse: {
    decode(input: _m0.Reader | Uint8Array, length?: number): PushLensSubscriptionResponse;
    fromJSON(object: any): PushLensSubscriptionResponse;
    toJSON(message: PushLensSubscriptionResponse): unknown;
    fromPartial<I extends {
        lens?: {
            id?: string | undefined;
            name?: string | undefined;
            vendorData?: {
                [x: string]: string | undefined;
            } | undefined;
            content?: {
                lnsUrl?: string | undefined;
                lnsSha256?: string | undefined;
                iconUrl?: string | undefined;
                preview?: {
                    imageUrl?: string | undefined;
                    imageSequenceSize?: number | undefined;
                    imageSequenceWebpUrlPattern?: string | undefined;
                } | undefined;
                assetManifest?: {
                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                    id?: string | undefined;
                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                    assetUrl?: string | undefined;
                    assetChecksum?: string | undefined;
                }[] | undefined;
                defaultHintId?: string | undefined;
                hintTranslations?: {
                    [x: string]: string | undefined;
                } | undefined;
                lnsUrlBolt?: string | undefined;
                iconUrlBolt?: string | undefined;
            } | undefined;
            isThirdParty?: boolean | undefined;
            cameraFacingPreference?: import("./lens").Lens_CameraFacing | undefined;
            featureMetadata?: {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            }[] | undefined;
            lensCreator?: {
                displayName?: string | undefined;
            } | undefined;
            scannable?: {
                snapcodeImageUrl?: string | undefined;
                snapcodeDeeplink?: string | undefined;
            } | undefined;
        } | undefined;
        excludedLens?: {
            lensId?: number | undefined;
            code?: PushLensSubscriptionResponse_ExcludedLens_Code | undefined;
        } | undefined;
        heartbeat?: number | undefined;
        lenses?: {
            [x: string]: Uint8Array | undefined;
        } | undefined;
    } & {
        lens?: ({
            id?: string | undefined;
            name?: string | undefined;
            vendorData?: {
                [x: string]: string | undefined;
            } | undefined;
            content?: {
                lnsUrl?: string | undefined;
                lnsSha256?: string | undefined;
                iconUrl?: string | undefined;
                preview?: {
                    imageUrl?: string | undefined;
                    imageSequenceSize?: number | undefined;
                    imageSequenceWebpUrlPattern?: string | undefined;
                } | undefined;
                assetManifest?: {
                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                    id?: string | undefined;
                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                    assetUrl?: string | undefined;
                    assetChecksum?: string | undefined;
                }[] | undefined;
                defaultHintId?: string | undefined;
                hintTranslations?: {
                    [x: string]: string | undefined;
                } | undefined;
                lnsUrlBolt?: string | undefined;
                iconUrlBolt?: string | undefined;
            } | undefined;
            isThirdParty?: boolean | undefined;
            cameraFacingPreference?: import("./lens").Lens_CameraFacing | undefined;
            featureMetadata?: {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            }[] | undefined;
            lensCreator?: {
                displayName?: string | undefined;
            } | undefined;
            scannable?: {
                snapcodeImageUrl?: string | undefined;
                snapcodeDeeplink?: string | undefined;
            } | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            vendorData?: ({
                [x: string]: string | undefined;
            } & {
                [x: string]: string | undefined;
            } & Record<Exclude<keyof I["lens"]["vendorData"], string | number>, never>) | undefined;
            content?: ({
                lnsUrl?: string | undefined;
                lnsSha256?: string | undefined;
                iconUrl?: string | undefined;
                preview?: {
                    imageUrl?: string | undefined;
                    imageSequenceSize?: number | undefined;
                    imageSequenceWebpUrlPattern?: string | undefined;
                } | undefined;
                assetManifest?: {
                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                    id?: string | undefined;
                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                    assetUrl?: string | undefined;
                    assetChecksum?: string | undefined;
                }[] | undefined;
                defaultHintId?: string | undefined;
                hintTranslations?: {
                    [x: string]: string | undefined;
                } | undefined;
                lnsUrlBolt?: string | undefined;
                iconUrlBolt?: string | undefined;
            } & {
                lnsUrl?: string | undefined;
                lnsSha256?: string | undefined;
                iconUrl?: string | undefined;
                preview?: ({
                    imageUrl?: string | undefined;
                    imageSequenceSize?: number | undefined;
                    imageSequenceWebpUrlPattern?: string | undefined;
                } & {
                    imageUrl?: string | undefined;
                    imageSequenceSize?: number | undefined;
                    imageSequenceWebpUrlPattern?: string | undefined;
                } & Record<Exclude<keyof I["lens"]["content"]["preview"], keyof import("./lens").Preview>, never>) | undefined;
                assetManifest?: ({
                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                    id?: string | undefined;
                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                    assetUrl?: string | undefined;
                    assetChecksum?: string | undefined;
                }[] & ({
                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                    id?: string | undefined;
                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                    assetUrl?: string | undefined;
                    assetChecksum?: string | undefined;
                } & {
                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                    id?: string | undefined;
                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                    assetUrl?: string | undefined;
                    assetChecksum?: string | undefined;
                } & Record<Exclude<keyof I["lens"]["content"]["assetManifest"][number], keyof import("./lens").LensAssetManifestItem>, never>)[] & Record<Exclude<keyof I["lens"]["content"]["assetManifest"], keyof {
                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                    id?: string | undefined;
                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                    assetUrl?: string | undefined;
                    assetChecksum?: string | undefined;
                }[]>, never>) | undefined;
                defaultHintId?: string | undefined;
                hintTranslations?: ({
                    [x: string]: string | undefined;
                } & {
                    [x: string]: string | undefined;
                } & Record<Exclude<keyof I["lens"]["content"]["hintTranslations"], string | number>, never>) | undefined;
                lnsUrlBolt?: string | undefined;
                iconUrlBolt?: string | undefined;
            } & Record<Exclude<keyof I["lens"]["content"], keyof import("./lens").Content>, never>) | undefined;
            isThirdParty?: boolean | undefined;
            cameraFacingPreference?: import("./lens").Lens_CameraFacing | undefined;
            featureMetadata?: ({
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            }[] & ({
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            } & {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            } & Record<Exclude<keyof I["lens"]["featureMetadata"][number], keyof import("../../google/protobuf/any").Any>, never>)[] & Record<Exclude<keyof I["lens"]["featureMetadata"], keyof {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            }[]>, never>) | undefined;
            lensCreator?: ({
                displayName?: string | undefined;
            } & {
                displayName?: string | undefined;
            } & Record<Exclude<keyof I["lens"]["lensCreator"], "displayName">, never>) | undefined;
            scannable?: ({
                snapcodeImageUrl?: string | undefined;
                snapcodeDeeplink?: string | undefined;
            } & {
                snapcodeImageUrl?: string | undefined;
                snapcodeDeeplink?: string | undefined;
            } & Record<Exclude<keyof I["lens"]["scannable"], keyof import("./lens").Scannable>, never>) | undefined;
        } & Record<Exclude<keyof I["lens"], keyof Lens>, never>) | undefined;
        excludedLens?: ({
            lensId?: number | undefined;
            code?: PushLensSubscriptionResponse_ExcludedLens_Code | undefined;
        } & {
            lensId?: number | undefined;
            code?: PushLensSubscriptionResponse_ExcludedLens_Code | undefined;
        } & Record<Exclude<keyof I["excludedLens"], keyof PushLensSubscriptionResponse_ExcludedLens>, never>) | undefined;
        heartbeat?: number | undefined;
        lenses?: ({
            [x: string]: Uint8Array | undefined;
        } & {
            [x: string]: Uint8Array | undefined;
        } & Record<Exclude<keyof I["lenses"], string | number>, never>) | undefined;
    } & Record<Exclude<keyof I, keyof PushLensSubscriptionResponse>, never>>(object: I): PushLensSubscriptionResponse;
};
export declare const PushLensSubscriptionResponse_LensesEntry: {
    decode(input: _m0.Reader | Uint8Array, length?: number): PushLensSubscriptionResponse_LensesEntry;
    fromJSON(object: any): PushLensSubscriptionResponse_LensesEntry;
    toJSON(message: PushLensSubscriptionResponse_LensesEntry): unknown;
    fromPartial<I extends {
        key?: string | undefined;
        value?: Uint8Array | undefined;
    } & {
        key?: string | undefined;
        value?: Uint8Array | undefined;
    } & Record<Exclude<keyof I, keyof PushLensSubscriptionResponse_LensesEntry>, never>>(object: I): PushLensSubscriptionResponse_LensesEntry;
};
export declare const PushLensSubscriptionResponse_ExcludedLens: {
    decode(input: _m0.Reader | Uint8Array, length?: number): PushLensSubscriptionResponse_ExcludedLens;
    fromJSON(object: any): PushLensSubscriptionResponse_ExcludedLens;
    toJSON(message: PushLensSubscriptionResponse_ExcludedLens): unknown;
    fromPartial<I extends {
        lensId?: number | undefined;
        code?: PushLensSubscriptionResponse_ExcludedLens_Code | undefined;
    } & {
        lensId?: number | undefined;
        code?: PushLensSubscriptionResponse_ExcludedLens_Code | undefined;
    } & Record<Exclude<keyof I, keyof PushLensSubscriptionResponse_ExcludedLens>, never>>(object: I): PushLensSubscriptionResponse_ExcludedLens;
};
export declare const ListenLensPushRequest: {
    encode(message: ListenLensPushRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): ListenLensPushRequest;
    fromJSON(object: any): ListenLensPushRequest;
    toJSON(message: ListenLensPushRequest): unknown;
    fromPartial<I extends {
        extensionRequestContext?: Uint8Array | undefined;
        heartbeat?: number | undefined;
    } & {
        extensionRequestContext?: Uint8Array | undefined;
        heartbeat?: number | undefined;
    } & Record<Exclude<keyof I, keyof ListenLensPushRequest>, never>>(object: I): ListenLensPushRequest;
};
export declare const ListenLensPushResponse: {
    decode(input: _m0.Reader | Uint8Array, length?: number): ListenLensPushResponse;
    fromJSON(object: any): ListenLensPushResponse;
    toJSON(message: ListenLensPushResponse): unknown;
    fromPartial<I extends {
        excludedLens?: {
            lensId?: number | undefined;
            code?: ListenLensPushResponse_ExcludedLens_Code | undefined;
        } | undefined;
        heartbeat?: number | undefined;
        lenses?: {
            [x: string]: Uint8Array | undefined;
        } | undefined;
    } & {
        excludedLens?: ({
            lensId?: number | undefined;
            code?: ListenLensPushResponse_ExcludedLens_Code | undefined;
        } & {
            lensId?: number | undefined;
            code?: ListenLensPushResponse_ExcludedLens_Code | undefined;
        } & Record<Exclude<keyof I["excludedLens"], keyof ListenLensPushResponse_ExcludedLens>, never>) | undefined;
        heartbeat?: number | undefined;
        lenses?: ({
            [x: string]: Uint8Array | undefined;
        } & {
            [x: string]: Uint8Array | undefined;
        } & Record<Exclude<keyof I["lenses"], string | number>, never>) | undefined;
    } & Record<Exclude<keyof I, keyof ListenLensPushResponse>, never>>(object: I): ListenLensPushResponse;
};
export declare const ListenLensPushResponse_LensesEntry: {
    decode(input: _m0.Reader | Uint8Array, length?: number): ListenLensPushResponse_LensesEntry;
    fromJSON(object: any): ListenLensPushResponse_LensesEntry;
    toJSON(message: ListenLensPushResponse_LensesEntry): unknown;
    fromPartial<I extends {
        key?: string | undefined;
        value?: Uint8Array | undefined;
    } & {
        key?: string | undefined;
        value?: Uint8Array | undefined;
    } & Record<Exclude<keyof I, keyof ListenLensPushResponse_LensesEntry>, never>>(object: I): ListenLensPushResponse_LensesEntry;
};
export declare const ListenLensPushResponse_ExcludedLens: {
    decode(input: _m0.Reader | Uint8Array, length?: number): ListenLensPushResponse_ExcludedLens;
    fromJSON(object: any): ListenLensPushResponse_ExcludedLens;
    toJSON(message: ListenLensPushResponse_ExcludedLens): unknown;
    fromPartial<I extends {
        lensId?: number | undefined;
        code?: ListenLensPushResponse_ExcludedLens_Code | undefined;
    } & {
        lensId?: number | undefined;
        code?: ListenLensPushResponse_ExcludedLens_Code | undefined;
    } & Record<Exclude<keyof I, keyof ListenLensPushResponse_ExcludedLens>, never>>(object: I): ListenLensPushResponse_ExcludedLens;
};
export interface PushToDevice {
    PushLensSubscription(request: DeepPartial<Observable<PushLensSubscriptionRequest>>, metadata?: grpc.Metadata): Observable<PushLensSubscriptionResponse>;
    ListenLensPush(request: DeepPartial<ListenLensPushRequest>, metadata?: grpc.Metadata): Observable<ListenLensPushResponse>;
}
export declare class PushToDeviceClientImpl implements PushToDevice {
    private readonly rpc;
    constructor(rpc: Rpc);
    PushLensSubscription(request: DeepPartial<Observable<PushLensSubscriptionRequest>>, metadata?: grpc.Metadata): Observable<PushLensSubscriptionResponse>;
    ListenLensPush(request: DeepPartial<ListenLensPushRequest>, metadata?: grpc.Metadata): Observable<ListenLensPushResponse>;
}
export declare const PushToDeviceDesc: {
    serviceName: string;
};
export declare const PushToDevicePushLensSubscriptionDesc: UnaryMethodDefinitionish;
export declare const PushToDeviceListenLensPushDesc: UnaryMethodDefinitionish;
interface UnaryMethodDefinitionishR extends grpc.UnaryMethodDefinition<any, any> {
    requestStream: any;
    responseStream: any;
}
type UnaryMethodDefinitionish = UnaryMethodDefinitionishR;
interface Rpc {
    unary<T extends UnaryMethodDefinitionish>(methodDesc: T, request: any, metadata: grpc.Metadata | undefined): Promise<any>;
    invoke<T extends UnaryMethodDefinitionish>(methodDesc: T, request: any, metadata: grpc.Metadata | undefined): Observable<any>;
}
export declare class GrpcWebImpl {
    private host;
    private options;
    constructor(host: string, options: {
        transport?: grpc.TransportFactory;
        streamingTransport?: grpc.TransportFactory;
        debug?: boolean;
        metadata?: grpc.Metadata;
    });
    unary<T extends UnaryMethodDefinitionish>(methodDesc: T, _request: any, metadata: grpc.Metadata | undefined): Promise<any>;
    invoke<T extends UnaryMethodDefinitionish>(methodDesc: T, _request: any, metadata: grpc.Metadata | undefined): Observable<any>;
}
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {
    $case: string;
} ? {
    [K in keyof Omit<T, '$case'>]?: DeepPartial<T[K]>;
} & {
    $case: T['$case'];
} : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin ? P : P & {
    [K in keyof P]: Exact<P[K], I[K]>;
} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;
export {};
